#!/bin/sh

cd $2 || exit # Move to Processed directory

# Data and Brain Templates
data=$2/../Data
templates=$2/../Templates/

T1_orig=$1
T1_dir=$2/T1 # T1 dir
[ -d "T1" ] || mkdir $T1_dir # If not exist create T1

cd $T1_dir

cp $T1_orig T1_orig.nii.gz

#Calculate where does the brain start in the z dimension and then extract the roi
head_top=`${FSLDIR}/bin/robustfov -i $T1_orig | grep -v Final | head -n 1 | awk '{print $5}'`
${FSLDIR}/bin/fslmaths $T1_orig -roi 0 -1 0 -1 $head_top 170 0 1 T1_tmp

#Brain Extraction with ANTs
antsBrainExtraction.sh -d 3 -a T1_tmp.nii.gz -e $templates/T_template0.nii.gz -m $templates/T_template0_BrainCerebellumProbabilityMask.nii.gz -o T1_tmp -c 3x1x2x3

${FSLDIR}/bin/immv T1_tmpBrainExtractionBrain T1_tmp_brain

#Reduces the FOV of T1_orig by calculating a registration from T1_tmp_brain to ssref and applies it to T1_orig
${FSLDIR}/bin/standard_space_roi T1_tmp_brain T1_tmp2 -maskNONE -ssref $FSLDIR/data/standard/MNI152_T1_1mm_brain -altinput $T1_orig -d

${FSLDIR}/bin/immv T1_tmp2 T1

#Generate the actual affine from the T1 original volume to the cut version we have now and combine it to have an affine matrix from T1 to MNI
${FSLDIR}/bin/flirt -in T1 -ref $T1_orig -omat T1_to_T1_orig.mat -schedule $FSLDIR/etc/flirtsch/xyztrans.sch # Affine
${FSLDIR}/bin/convert_xfm -omat T1_orig_to_T1.mat -inverse T1_to_T1_orig.mat
${FSLDIR}/bin/convert_xfm -omat T1_to_MNI_linear.mat -concat  T1_tmp2_tmp_to_std.mat T1_to_T1_orig.mat

#Non-linear registration to MNI using the previously calculated alignment
${FSLDIR}/bin/fnirt --in=T1 --ref=$FSLDIR/data/standard/MNI152_T1_1mm --aff=T1_to_MNI_linear.mat \
  --config=$data/fnirt.cnf --refmask=$templates/MNI152_T1_1mm_brain_mask_dil_GD7 \
  --logout=../logs/bb_T1_to_MNI_fnirt.log --cout=T1_to_MNI_warp_coef --fout=T1_to_MNI_warp \
  --jout=T1_to_MNI_warp_jac --iout=T1_tmp4.nii.gz --interp=spline

# Apply tx to Image
${FSLDIR}/bin/applywarp --rel -i T1 -r $FSLDIR/data/standard/MNI152_T1_1mm -w T1_to_MNI_warp -o T1_brain_to_MNI --interp=spline

#Create brain mask
${FSLDIR}/bin/invwarp --ref=T1 -w T1_to_MNI_warp_coef -o T1_to_MNI_warp_coef_inv
${FSLDIR}/bin/applywarp --rel --interp=trilinear --in=$templates/MNI152_T1_1mm_brain_mask --ref=T1 -w T1_to_MNI_warp_coef_inv -o T1_brain_mask
${FSLDIR}/bin/fslmaths T1 -mul T1_brain_mask T1_brain
${FSLDIR}/bin/fslmaths T1_brain_to_MNI -mul $templates/MNI152_T1_1mm_brain_mask T1_brain_to_MNI

#Clean and reorganize
rm *tmp*
mkdir transforms
mv *MNI* transforms
mv *warp*.* transforms
mv *_to_* transforms
mv transforms/T1_brain_to_MNI.nii.gz .


#Run fast
mkdir T1_fast
${FSLDIR}/bin/fast -b -o T1_fast/T1_brain T1_brain

#Binarize PVE masks
if [ -f T1_fast/T1_brain_pveseg.nii.gz ] ; then
    $FSLDIR/bin/fslmaths T1_fast/T1_brain_pve_0.nii.gz -thr 0.5 -bin T1_fast/T1_brain_CSF_mask.nii.gz
    $FSLDIR/bin/fslmaths T1_fast/T1_brain_pve_1.nii.gz -thr 0.5 -bin T1_fast/T1_brain_GM_mask.nii.gz
    $FSLDIR/bin/fslmaths T1_fast/T1_brain_pve_2.nii.gz -thr 0.5 -bin T1_fast/T1_brain_WM_mask.nii.gz
fi

#Apply bias field correction to T1
if [ -f T1_fast/T1_brain_bias.nii.gz ] ; then
    ${FSLDIR}/bin/fslmaths T1.nii.gz -div T1_fast/T1_brain_bias.nii.gz T1_unbiased.nii.gz
    ${FSLDIR}/bin/fslmaths T1_brain.nii.gz -div T1_fast/T1_brain_bias.nii.gz T1_unbiased_brain.nii.gz
else
    echo "WARNING: There was no bias field estimation. Bias field correction cannot be applied to T1."
fi

#Run First
mkdir T1_first

#Creates a link inside T1_first to ./T1_unbiased_brain.nii.gz (In the present working directory)
ln -s ../T1_unbiased_brain.nii.gz T1_first/T1_unbiased_brain.nii.gz
${FSLDIR}/bin/run_first_all -i T1_first/T1_unbiased_brain -b -o T1_first/T1_first